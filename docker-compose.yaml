services:
  weather-harvester-svc:
    image: ghcr.io/rum-people-preseed/weather-harvester-svc:1bd3253c3699875d8313be8daa08e7f8ac28be60
    restart: unless-stopped
    depends_on:
      weather-harvester-svc-pgdb:
        condition: service_healthy

  weather-harvester-svc-pgdb:
    image: postgres:16.1-alpine3.19
    restart: always
    # ports:
    #   - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=weather-harvester-svc
      - POSTGRES_PASSWORD=weather-harvester-svc
      - POSTGRES_DB=weather-harvester-svc
    volumes:
      - weather-harvester-svc-pgdb-data:/var/lib/postgresql/data    

  weather-predictor-svc:
    image: ghcr.io/rum-people-preseed/weather-predictor-svc:30e3316912766cb4de81e9c3d6a437cec00e0743
    restart: unless-stopped  
    depends_on:
      - weather-harvester-svc:
        condition: service_started

  telegram-weather-svc:
    image: ghcr.io/rum-people-preseed/weather-harvester-svc:c197fc77142bfa4ad1235395728faefe97fb33cc
    restart: unless-stopped
    environment:
      - GEO_NAME_SERVICE_USERNAME=people_of_rum
      - TELEGRAM_API_TOKEN=6931473703:AAF0oOQ9yXjGZoWN48a0bPV-TVIucN5EHFc
    depends_on:
      - weather-predictor-svc:
        condition: service_started
      - telegram-weather-svc-pgdb:
        condition: service_healthy

volumes:
  weather-harvester-svc-pgdb-data: